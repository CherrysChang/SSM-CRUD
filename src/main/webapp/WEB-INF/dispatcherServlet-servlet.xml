<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--SpringMVC的配置文件，包含网站跳转逻辑的控制，配置  -->
    <!--设置自动扫描的包-->
    <context:component-scan base-package="com.study.crud" use-default-filters="false">
        <!--只扫描控制器。  -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置视图解析器，方便页面返回  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- <mvc:resources/ >自动注册的 SimpleUrlHandlerMapping的order属性值是： 2147483646
         <mvc:default-servlet-handler/>自动注册的SimpleUrlHandlerMapping 的order属性值是： 2147483647
         spring会先执行order值比较小的。-->
    <!--静态资源访问处理-->
    <!--mapping：映射路径
            两个*，它表示映射static/下所有的URL，包括子路径（即接多个/）
        location 指定本地静态资源的位置，必须是webapp根目录下的路径。
            如果你将资源目录，放置到webapp/WEB-INF下面的话，应该改为location="/WEB-INF/static/-->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!--两个标准配置  -->
    <!-- 将springmvc不能处理的请求交给tomcat 。比如静态资源-->
    <mvc:default-servlet-handler/>
    <!-- 能支持springmvc更高级的一些功能，JSR303校验，快捷的ajax...映射动态请求。@RequestBody 和 @ResponseBody 注解的支持-->
    <mvc:annotation-driven/>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <!-- 多个拦截器，按声明顺序执行 -->

        <!-- 针对所有资源 -->
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <!--<bean class="com.host.app.web.interceptor.AllInterceptor"/>-->

        <!-- 针对指定资源 -->
        <mvc:interceptor>
            <!--mapping和exclude-mapping的定义规则： 可以使用一个星号*表示任意字符，使用两个星号**表示任意层次的任意字符-->
            <mvc:mapping path="/**"/> <!-- 拦截所有的url包括子url路径 -->
            <!--设置不拦截的路径-->
            <mvc:exclude-mapping path="/userLogin"/>
            <mvc:exclude-mapping path="/userLogout"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.study.crud.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>