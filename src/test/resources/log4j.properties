# 配置根Logger 语法：log4j.rootLogger = [ level ] , appenderName, appenderName, …
# level 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。
# Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。
# 设置日志输出的等级为debug,低于debug就不会输出了
# 设置日志输出到两种地方，分别叫做 stdout和 R
log4j.rootLogger=debug, stdout, R

# 配置日志信息输出目的地 Appender，Appender 负责控制日志记录操作的输出。语法如下
# log4j.appender.appenderName = fully.qualified.name.of.appender.class
# log4j.appender.appenderName.option1 = value1
# …
# log4j.appender.appenderName.optionN = valueN
# Log4j提供的appender有以下几种：
# org.apache.log4j.ConsoleAppender（控制台），
# org.apache.log4j.FileAppender（文件），
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
# ps:这里的appenderName为在第一步里定义的，可任意起名。

#第一个地方stdout，输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# 配置日志信息的格式(布局)Layout, Layout 负责格式化Appender的输出
# Log4j提供的layout有以下几种：
# org.apache.log4j.HTMLLayout(已HTML表格形式布局)
# org.apache.log4j.PatternLayout(可以灵活地指定布局模式)
# org.apache.log4j.SimpleLayout(包含日志信息的级别 和信息字符串)
# org.apache.log4j.TTCCLayout(包含日志产生的时间、线程、类别等等信息)
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
# 格式说明：
# %c 输出日志信息所属的类的全名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28
# %f 输出日志信息所属的类的类名
# %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自应用启动到输出该日志信息所耗费的毫秒数
# %t 输出产生该日志事件的线程名
# 可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式，比如 %5p：宽度表示优先级字符串至少占用5个字符，如果不够，补足5个。 比如info和warn就会补足5个，和其他的error,fatal等5个字符的优先级字符串对齐。 为的是对齐整洁，使得日志便于阅读。
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

#第二个地方 R, 以滚动的方式输出到文件，文件名是example.log,文件最大100k, 最多滚动5个文件
#文件大小到指定尺寸的时候产生一个新文件
log4j.appender.R=org.apache.log4j.RollingFileAppender 
# 指定消息输出到mylog.txt文件
log4j.appender.R.File=example.log
# 设置文件大小
log4j.appender.R.MaxFileSize=100KB
# Keep one backup file 可以产生的滚动文件的最大数。
log4j.appender.R.MaxBackupIndex=5
# true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认为true
log4j.appender.E.Append = true  
#Threshold 指定日志消息的输出最低层次。
log4j.appender.E.Threshold = debug   
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n